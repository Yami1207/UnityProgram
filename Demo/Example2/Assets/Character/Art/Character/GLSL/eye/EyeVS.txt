#version 330
uniform vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform vec4 _XSphereLightCharacterA[3];
uniform vec4 _XSphereLightCharacterB[3];
in vec4 in_POSITION0;
in vec3 in_NORMAL0;
in vec4 in_TEXCOORD0;
out vec4 vs_TEXCOORD0;
out vec3 vs_TEXCOORD1;
out float vs_TEXCOORD6;
out vec4 vs_TEXCOORD2;
out vec3 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat16_3;
vec3 u_xlat16_4;
vec3 u_xlat16_5;
vec3 u_xlat16_6;
float u_xlat16_10;
vec3 u_xlat16_11;
float u_xlat16_17;
float u_xlat22;
float u_xlat16_24;
void main(){
(u_xlat0 = (in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1]));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx) + u_xlat0));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz) + u_xlat0));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww) + u_xlat0));
(u_xlat1 = (u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1]));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx) + u_xlat1));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz) + u_xlat1));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww) + u_xlat1));
(gl_Position = u_xlat1);
(vs_TEXCOORD6 = u_xlat1.z);
(vs_TEXCOORD0.xy = in_TEXCOORD0.xy);
(vs_TEXCOORD0.zw = vec2(0.0, 0.0));
(u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz));
(u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz));
(u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz));
(u_xlat22 = dot(u_xlat1.xyz, u_xlat1.xyz));
(u_xlat22 = inversesqrt(u_xlat22));
(u_xlat1.xyz = (vec3(u_xlat22) * u_xlat1.xyz));
(vs_TEXCOORD1.xyz = u_xlat1.xyz);
(vs_TEXCOORD2 = u_xlat0);
(u_xlat2.xyz = ((-u_xlat0.xyz) + _XSphereLightCharacterB[1].xyz));
(u_xlat16_3.x = dot(u_xlat2.xyz, u_xlat2.xyz));
(u_xlat16_10 = sqrt(u_xlat16_3.x));
(u_xlat16_3.x = inversesqrt(u_xlat16_3.x));
(u_xlat16_17 = (u_xlat16_10 + 1.0));
(u_xlat16_17 = (u_xlat16_17 + (-_XSphereLightCharacterA[1].w)));
(u_xlat16_17 = max(u_xlat16_17, 9.9999997e-06));
(u_xlat16_17 = (1.0 / u_xlat16_17));
(u_xlat16_17 = min(u_xlat16_17, 1.0));
(u_xlat16_4.xyz = ((u_xlat2.xyz * u_xlat16_3.xxx) + (-u_xlat1.xyz)));
(u_xlat16_5.xyz = (u_xlat2.xyz * u_xlat16_3.xxx));
(u_xlat16_3.xzw = ((vec3(u_xlat16_17) * u_xlat16_4.xyz) + u_xlat1.xyz));
(u_xlat16_3.x = dot(u_xlat16_5.xyz, u_xlat16_3.xzw));
(u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0));
(u_xlat16_17 = max(_XSphereLightCharacterB[1].w, 9.9999997e-06));
(u_xlat16_10 = (u_xlat16_10 / u_xlat16_17));
(u_xlat16_10 = min(u_xlat16_10, 1.0));
(u_xlat16_10 = ((-u_xlat16_10) + 1.0));
(u_xlat16_3.x = (u_xlat16_10 * u_xlat16_3.x));
(u_xlat16_3.xyz = (u_xlat16_3.xxx * _XSphereLightCharacterA[1].xyz));
(u_xlat2.xyz = ((-u_xlat0.xyz) + _XSphereLightCharacterB[0].xyz));
(u_xlat0.xyz = ((-u_xlat0.xyz) + _XSphereLightCharacterB[2].xyz));
(u_xlat16_24 = dot(u_xlat2.xyz, u_xlat2.xyz));
(u_xlat16_4.x = sqrt(u_xlat16_24));
(u_xlat16_24 = inversesqrt(u_xlat16_24));
(u_xlat16_11.x = (u_xlat16_4.x + 1.0));
(u_xlat16_11.x = (u_xlat16_11.x + (-_XSphereLightCharacterA[0].w)));
(u_xlat16_11.x = max(u_xlat16_11.x, 9.9999997e-06));
(u_xlat16_11.x = (1.0 / u_xlat16_11.x));
(u_xlat16_11.x = min(u_xlat16_11.x, 1.0));
(u_xlat16_5.xyz = ((u_xlat2.xyz * vec3(u_xlat16_24)) + (-u_xlat1.xyz)));
(u_xlat16_6.xyz = (u_xlat2.xyz * vec3(u_xlat16_24)));
(u_xlat16_11.xyz = ((u_xlat16_11.xxx * u_xlat16_5.xyz) + u_xlat1.xyz));
(u_xlat16_24 = dot(u_xlat16_6.xyz, u_xlat16_11.xyz));
(u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0));
(u_xlat16_11.x = max(_XSphereLightCharacterB[0].w, 9.9999997e-06));
(u_xlat16_4.x = (u_xlat16_4.x / u_xlat16_11.x));
(u_xlat16_4.x = min(u_xlat16_4.x, 1.0));
(u_xlat16_4.x = ((-u_xlat16_4.x) + 1.0));
(u_xlat16_24 = (u_xlat16_24 * u_xlat16_4.x));
(u_xlat16_3.xyz = ((vec3(u_xlat16_24) * _XSphereLightCharacterA[0].xyz) + u_xlat16_3.xyz));
(u_xlat16_24 = dot(u_xlat0.xyz, u_xlat0.xyz));
(u_xlat16_4.x = inversesqrt(u_xlat16_24));
(u_xlat16_24 = sqrt(u_xlat16_24));
(u_xlat16_11.xyz = ((u_xlat0.xyz * u_xlat16_4.xxx) + (-u_xlat1.xyz)));
(u_xlat16_5.xyz = (u_xlat0.xyz * u_xlat16_4.xxx));
(u_xlat16_4.x = (u_xlat16_24 + 1.0));
(u_xlat16_4.x = (u_xlat16_4.x + (-_XSphereLightCharacterA[2].w)));
(u_xlat16_4.x = max(u_xlat16_4.x, 9.9999997e-06));
(u_xlat16_4.x = (1.0 / u_xlat16_4.x));
(u_xlat16_4.x = min(u_xlat16_4.x, 1.0));
(u_xlat16_4.xyz = ((u_xlat16_4.xxx * u_xlat16_11.xyz) + u_xlat1.xyz));
(u_xlat16_4.x = dot(u_xlat16_5.xyz, u_xlat16_4.xyz));
(u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0));
(u_xlat16_11.x = max(_XSphereLightCharacterB[2].w, 9.9999997e-06));
(u_xlat16_24 = (u_xlat16_24 / u_xlat16_11.x));
(u_xlat16_24 = min(u_xlat16_24, 1.0));
(u_xlat16_24 = ((-u_xlat16_24) + 1.0));
(u_xlat16_24 = (u_xlat16_24 * u_xlat16_4.x));
(vs_TEXCOORD5.xyz = ((vec3(u_xlat16_24) * _XSphereLightCharacterA[2].xyz) + u_xlat16_3.xyz));
return ;
}
