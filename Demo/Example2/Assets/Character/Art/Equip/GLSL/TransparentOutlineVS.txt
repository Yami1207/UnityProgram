#version 330
uniform vec4 hlslcc_mtx4x4unity_CameraProjection[4];
uniform vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform vec4 hlslcc_mtx4x4glstate_matrix_projection[4];
uniform vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform float _XOutlineZOffset;
uniform float _XCharOutlineWidth;
in vec4 in_POSITION0;
in vec3 in_NORMAL0;
in vec4 in_TANGENT0;
in vec4 in_TEXCOORD3;
out float vs_TEXCOORD0;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec3 u_xlat3;
float u_xlat6;
void main(){
(u_xlat0.xyz = (in_NORMAL0.zxy * in_TANGENT0.yzx));
(u_xlat0.xyz = ((in_NORMAL0.yzx * in_TANGENT0.zxy) + (-u_xlat0.xyz)));
(u_xlat0.xyz = (u_xlat0.xyz * in_TANGENT0.www));
(u_xlat1.xyz = ((in_TEXCOORD3.xyz * vec3(2.0, 2.0, 2.0)) + vec3(-1.0, -1.0, -1.0)));
(u_xlat0.xyz = (u_xlat0.xyz * u_xlat1.yyy));
(u_xlat0.xyz = ((in_TANGENT0.xyz * u_xlat1.xxx) + u_xlat0.xyz));
(u_xlat0.xyz = ((in_NORMAL0.xyz * u_xlat1.zzz) + u_xlat0.xyz));
(u_xlat1 = (hlslcc_mtx4x4unity_ObjectToWorld[1].yyyy * hlslcc_mtx4x4unity_MatrixV[1]));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixV[0] * hlslcc_mtx4x4unity_ObjectToWorld[1].xxxx) + u_xlat1));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixV[2] * hlslcc_mtx4x4unity_ObjectToWorld[1].zzzz) + u_xlat1));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixV[3] * hlslcc_mtx4x4unity_ObjectToWorld[1].wwww) + u_xlat1));
(u_xlat3.xz = (u_xlat0.yy * u_xlat1.xy));
(u_xlat1 = (u_xlat1 * in_POSITION0.yyyy));
(u_xlat2 = (hlslcc_mtx4x4unity_ObjectToWorld[0].yyyy * hlslcc_mtx4x4unity_MatrixV[1]));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[0] * hlslcc_mtx4x4unity_ObjectToWorld[0].xxxx) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[2] * hlslcc_mtx4x4unity_ObjectToWorld[0].zzzz) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[3] * hlslcc_mtx4x4unity_ObjectToWorld[0].wwww) + u_xlat2));
(u_xlat0.xy = ((u_xlat2.xy * u_xlat0.xx) + u_xlat3.xz));
(u_xlat1 = ((u_xlat2 * in_POSITION0.xxxx) + u_xlat1));
(u_xlat2 = (hlslcc_mtx4x4unity_ObjectToWorld[2].yyyy * hlslcc_mtx4x4unity_MatrixV[1]));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[0] * hlslcc_mtx4x4unity_ObjectToWorld[2].xxxx) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[2] * hlslcc_mtx4x4unity_ObjectToWorld[2].zzzz) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[3] * hlslcc_mtx4x4unity_ObjectToWorld[2].wwww) + u_xlat2));
(u_xlat0.xy = ((u_xlat2.xy * u_xlat0.zz) + u_xlat0.xy));
(u_xlat1 = ((u_xlat2 * in_POSITION0.zzzz) + u_xlat1));
(u_xlat0.z = 0.001);
(u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz));
(u_xlat6 = inversesqrt(u_xlat6));
(u_xlat0.xy = (vec2(u_xlat6) * u_xlat0.xy));
(u_xlat2 = (hlslcc_mtx4x4unity_ObjectToWorld[3].yyyy * hlslcc_mtx4x4unity_MatrixV[1]));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[0] * hlslcc_mtx4x4unity_ObjectToWorld[3].xxxx) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[2] * hlslcc_mtx4x4unity_ObjectToWorld[3].zzzz) + u_xlat2));
(u_xlat2 = ((hlslcc_mtx4x4unity_MatrixV[3] * hlslcc_mtx4x4unity_ObjectToWorld[3].wwww) + u_xlat2));
(u_xlat1 = ((u_xlat2 * in_POSITION0.wwww) + u_xlat1));
(u_xlat1 = (u_xlat1 / u_xlat1.wwww));
(u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz));
(u_xlat6 = inversesqrt(u_xlat6));
(u_xlat2.xyz = (vec3(u_xlat6) * u_xlat1.xyz));
(u_xlat2.xyz = ((u_xlat2.xyz * vec3(0.0015, 0.0015, 0.0015)) + u_xlat1.xyz));
(u_xlat6 = (u_xlat1.z / hlslcc_mtx4x4unity_CameraProjection[1].y));
(u_xlat6 = (u_xlat6 * 66.666672));
(u_xlat6 = sqrt((-u_xlat6)));
(u_xlat6 = (u_xlat6 * _XCharOutlineWidth));
(u_xlat6 = (u_xlat6 * 0.00026999999));
(u_xlat0.xy = ((u_xlat0.xy * vec2(u_xlat6)) + u_xlat2.xy));
(u_xlat6 = (u_xlat2.z + _XOutlineZOffset));
(u_xlat2 = (u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1]));
(u_xlat2 = ((hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx) + u_xlat2));
(u_xlat0 = ((hlslcc_mtx4x4glstate_matrix_projection[2] * vec4(u_xlat6)) + u_xlat2));
(u_xlat0 = ((hlslcc_mtx4x4glstate_matrix_projection[3] * u_xlat1.wwww) + u_xlat0));
(gl_Position = u_xlat0);
(vs_TEXCOORD0 = u_xlat0.z);
return ;
}
