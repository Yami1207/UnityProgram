#version 330
uniform float _XSkyTopColorBlend;
uniform vec3 _XSkyTopColor;
uniform float _XSkyBloom;
uniform vec3 _XSkyMoonSkyColor;
uniform vec3 _XSkyFogColor;
uniform vec3 _XSkyGroundColor;
uniform vec3 _XSkyLocalSunDirection;
uniform vec3 _XSkyLocalMoonDirection;
uniform float _XSkyContrast;
uniform float _XSkyBrightness;
uniform float _XSkyFogginess;
uniform float _XSkyMoonHaloPower;
uniform vec3 _XSkyMoonHaloColor;
uniform vec3 _XSkyMie;
uniform vec4 _XSceneDarkColor;
uniform float _XSceneGray;
in vec3 vs_TEXCOORD0;
in vec3 vs_TEXCOORD1;
in vec3 vs_TEXCOORD2;
layout(location = 0) out vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
vec3 u_xlat2;
float u_xlat3;
float u_xlat6;
float u_xlat9;
float u_xlat10;
void main(){
(u_xlat0.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz));
(u_xlat0.x = inversesqrt(u_xlat0.x));
(u_xlat0.xyz = (u_xlat0.xxx * vs_TEXCOORD0.yxz));

(u_xlat9 = dot(u_xlat0.yxz, _XSkyLocalMoonDirection.xyz));
(u_xlat9 = max(u_xlat9, 0.0));
(u_xlat9 = log2(u_xlat9));
(u_xlat9 = (u_xlat9 * _XSkyMoonHaloPower));
(u_xlat9 = exp2(u_xlat9));
(u_xlat1.xyz = (vec3(u_xlat9) * _XSkyMoonHaloColor.xyz));
(u_xlat9 = max(u_xlat0.x, 0.0));
(u_xlat10 = (((-u_xlat9) * 0.75) + 1.0));
(u_xlat9 = min(u_xlat9, 1.0));
(u_xlat9 = (u_xlat9 * _XSkyTopColorBlend));
(u_xlat1.xyz = ((_XSkyMoonSkyColor.xyz * vec3(u_xlat10)) + u_xlat1.xyz));
(u_xlat3 = dot(_XSkyLocalSunDirection.yxz, u_xlat0.xyz));
(u_xlat0.x = (-u_xlat0.x));
(u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0));
(u_xlat6 = (u_xlat3 * u_xlat3));
(u_xlat6 = ((u_xlat6 * 0.75) + 0.75));
(u_xlat1.xyz = ((vec3(u_xlat6) * vs_TEXCOORD1.xyz) + u_xlat1.xyz));
(u_xlat6 = ((_XSkyMie.z * u_xlat3) + _XSkyMie.y));
(u_xlat3 = ((u_xlat3 * u_xlat3) + 1.0));
(u_xlat3 = (u_xlat3 * _XSkyMie.x));
(u_xlat6 = log2(u_xlat6));
(u_xlat6 = (u_xlat6 * 1.5));
(u_xlat6 = exp2(u_xlat6));
(u_xlat3 = (u_xlat3 / u_xlat6));
(u_xlat1.xyz = ((vec3(u_xlat3) * vs_TEXCOORD2.xyz) + u_xlat1.xyz));
(u_xlat2.xyz = ((-u_xlat1.xyz) + _XSkyGroundColor.xyz));
(u_xlat0.xyz = ((u_xlat0.xxx * u_xlat2.xyz) + u_xlat1.xyz));
(u_xlat1.xyz = ((-u_xlat0.xyz) + vec3(_XSkyTopColor.x, _XSkyTopColor.y, _XSkyTopColor.z)));
(u_xlat0.xyz = ((vec3(u_xlat9) * u_xlat1.xyz) + u_xlat0.xyz));
(u_xlat1.xyz = ((-u_xlat0.xyz) + _XSkyFogColor.xyz));
(u_xlat0.xyz = ((vec3(vec3(_XSkyFogginess, _XSkyFogginess, _XSkyFogginess)) * u_xlat1.xyz) + u_xlat0.xyz));
(u_xlat0.xyz = (u_xlat0.xyz * vec3(_XSkyBrightness)));
(u_xlat0.xyz = log2(u_xlat0.xyz));
(u_xlat0.xyz = (u_xlat0.xyz * vec3(vec3(_XSkyContrast, _XSkyContrast, _XSkyContrast))));
(u_xlat0.xyz = exp2(u_xlat0.xyz));
(u_xlat9 = dot(u_xlat0.xy, vec2(0.30000001, 0.58999997)));
(u_xlat1.xyz = ((u_xlat0.xyz * vec3(0.11, 0.11, 0.11)) + vec3(u_xlat9)));
(u_xlat1.xyz = ((-u_xlat0.xyz) + u_xlat1.xyz));
(u_xlat0.xyz = ((vec3(_XSceneGray) * u_xlat1.xyz) + u_xlat0.xyz));
(u_xlat1.xyz = ((u_xlat0.xyz * _XSceneDarkColor.xyz) + (-u_xlat0.xyz)));
(SV_Target0.xyz = ((_XSceneDarkColor.www * u_xlat1.xyz) + u_xlat0.xyz));
(SV_Target0.w = _XSkyBloom);
return ;
}
