#version 330
uniform vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform float _GlobalShadowHeight;
uniform vec3 _XShadowDir;
in vec4 in_POSITION0;
out vec4 vs_TEXCOORD0;
out float vs_TEXCOORD1;
vec4 u_xlat0;
float u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
float u_xlat16_3;
vec2 u_xlat4;
float u_xlat16_6;
bool u_xlatb7;
bool u_xlatb10;
void main(){
(u_xlat16_0 = dot(vec2(_XShadowDir.x, _XShadowDir.z), vec2(_XShadowDir.x, _XShadowDir.z)));
(u_xlat16_0 = sqrt(u_xlat16_0));
(u_xlat16_3 = max(u_xlat16_0, abs(_XShadowDir.y)));
(u_xlat16_3 = (1.0 / u_xlat16_3));
(u_xlat16_6 = min(u_xlat16_0, abs(_XShadowDir.y)));
(u_xlat16_3 = (u_xlat16_3 * u_xlat16_6));
(u_xlat16_6 = (u_xlat16_3 * u_xlat16_3));
(u_xlat1.x = ((u_xlat16_6 * 0.0208351) + -0.085133001));
(u_xlat1.x = ((u_xlat16_6 * u_xlat1.x) + 0.180141));
(u_xlat1.x = ((u_xlat16_6 * u_xlat1.x) + -0.3302995));
(u_xlat1.x = ((u_xlat16_6 * u_xlat1.x) + 0.99986601));
(u_xlat4.x = (u_xlat16_3 * u_xlat1.x));
(u_xlat4.x = ((u_xlat4.x * -2.0) + 1.5707964));
(u_xlatb7 = (u_xlat16_0 < abs(_XShadowDir.y)));
(u_xlat16_0 = min(u_xlat16_0, _XShadowDir.y));
(u_xlatb10 = (u_xlat16_0 < (-u_xlat16_0)));
(u_xlat4.x = ((u_xlatb7) ? (u_xlat4.x) : (0.0)));
(u_xlat1.x = ((u_xlat16_3 * u_xlat1.x) + u_xlat4.x));
(u_xlat1.x = ((u_xlatb10) ? ((-u_xlat1.x)) : (u_xlat1.x)));
(u_xlat0 = (in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1]));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx) + u_xlat0));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz) + u_xlat0));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww) + u_xlat0));
(u_xlat4.x = (u_xlat0.y + (-_GlobalShadowHeight)));
(u_xlat1.x = (u_xlat4.x / u_xlat1.x));
(u_xlat4.xy = (((-vec2(_XShadowDir.x, _XShadowDir.z)) * u_xlat1.xx) + u_xlat0.xz));
(vs_TEXCOORD0.w = u_xlat1.x);
(u_xlat1.x = (_GlobalShadowHeight + 0.001));
(u_xlat2.xyz = (u_xlat1.xxx * hlslcc_mtx4x4unity_WorldToObject[1].xyz));
(u_xlat1.xyw = ((hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx) + u_xlat2.xyz));
(u_xlat1.xyz = ((hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.yyy) + u_xlat1.xyw));
(u_xlat1.xyz = ((hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat0.www) + u_xlat1.xyz));
(vs_TEXCOORD0.xyz = u_xlat0.xyz);
(u_xlat0 = (u_xlat1.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1]));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat1.xxxx) + u_xlat0));
(u_xlat0 = ((hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat1.zzzz) + u_xlat0));
(u_xlat0 = (u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3]));
(u_xlat1 = (u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1]));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx) + u_xlat1));
(u_xlat1 = ((hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz) + u_xlat1));
(u_xlat0 = ((hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww) + u_xlat1));
(gl_Position = u_xlat0);
(vs_TEXCOORD1 = u_xlat0.z);
return ;
}
